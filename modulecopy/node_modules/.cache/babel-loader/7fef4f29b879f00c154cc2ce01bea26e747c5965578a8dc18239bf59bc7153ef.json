{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johnathan\\\\Documents\\\\Vend88Website\\\\Vend88\\\\my-app\\\\src\\\\containers\\\\pageContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet RenerPage = props => {\n  _s();\n  let divRef = React.useRef(null);\n  useEffect(() => {\n    let handleTransitionEnd = () => {\n      // The transition has finished\n      // console.log('Transition finished.');\n      if (divRef.current != null && !props.isActive) divRef.current.style.display = \"none\";\n    };\n    if (divRef.current != null) {\n      if (props.isActive) {\n        divRef.current.style.display = \"block\";\n        // divRef.current.style.opacity = \"0\";             // set to visible\n\n        divRef.current.style.opacity = \"1\"; // set to visible\n      } else divRef.current.style.opacity = \"0\"; // set to visible\n\n      // Attach the event listener to the DOM element\n      divRef.current.addEventListener('transitionend', handleTransitionEnd); // on transition end, invisible\n    }\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      var _divRef$current;\n      (_divRef$current = divRef.current) === null || _divRef$current === void 0 ? void 0 : _divRef$current.removeEventListener('transitionend', handleTransitionEnd);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      style: {\n        transition: \"all 0.5s\",\n        opacity: \"0\" /* transform : `translate(${ (!props.isActive) ? \"100vw\" : \"0\"}, 0 )`*/\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(RenerPage, \"yu+j3H3uMpPkc7UDcPsbvSQj1vE=\");\n_c = RenerPage;\nexport default RenerPage;\nvar _c;\n$RefreshReg$(_c, \"RenerPage\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RenerPage","props","_s","divRef","useRef","handleTransitionEnd","current","isActive","style","display","opacity","addEventListener","_divRef$current","removeEventListener","children","ref","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Johnathan/Documents/Vend88Website/Vend88/my-app/src/containers/pageContainer.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\n\r\n\r\nlet RenerPage : React.FC<{children : ReactNode, isActive : String }> = (props) => { \r\n\r\n    let divRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n            let handleTransitionEnd = () => {\r\n                // The transition has finished\r\n                // console.log('Transition finished.');\r\n                if (divRef.current != null && !(props.isActive)) divRef.current.style.display = \"none\";\r\n            \r\n            };\r\n            if (divRef.current != null){\r\n                if (props.isActive){\r\n                    divRef.current.style.display = \"block\";\r\n                    // divRef.current.style.opacity = \"0\";             // set to visible\r\n\r\n                    divRef.current.style.opacity = \"1\";             // set to visible\r\n                } \r\n                else divRef.current.style.opacity = \"0\";             // set to visible\r\n\r\n                // Attach the event listener to the DOM element\r\n                divRef.current.addEventListener('transitionend', handleTransitionEnd);      // on transition end, invisible\r\n            }\r\n        \r\n            // Clean up the event listener when the component unmounts\r\n            return () => {\r\n                divRef.current?.removeEventListener('transitionend', handleTransitionEnd);\r\n            };\r\n\r\n\r\n      });\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div ref = {divRef} style = {{ transition : \"all 0.5s\", opacity : \"0\",/* transform : `translate(${ (!props.isActive) ? \"100vw\" : \"0\"}, 0 )`*/ } }> \r\n\r\n                { props.children }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default RenerPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,SAAS,QAA2C,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIvF,IAAIC,SAAgE,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE9E,IAAIC,MAAM,GAAGT,KAAK,CAACU,MAAM,CAAiB,IAAI,CAAC;EAE/CT,SAAS,CAAC,MAAM;IACR,IAAIU,mBAAmB,GAAGA,CAAA,KAAM;MAC5B;MACA;MACA,IAAIF,MAAM,CAACG,OAAO,IAAI,IAAI,IAAI,CAAEL,KAAK,CAACM,QAAS,EAAEJ,MAAM,CAACG,OAAO,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;IAE1F,CAAC;IACD,IAAIN,MAAM,CAACG,OAAO,IAAI,IAAI,EAAC;MACvB,IAAIL,KAAK,CAACM,QAAQ,EAAC;QACfJ,MAAM,CAACG,OAAO,CAACE,KAAK,CAACC,OAAO,GAAG,OAAO;QACtC;;QAEAN,MAAM,CAACG,OAAO,CAACE,KAAK,CAACE,OAAO,GAAG,GAAG,CAAC,CAAa;MACpD,CAAC,MACIP,MAAM,CAACG,OAAO,CAACE,KAAK,CAACE,OAAO,GAAG,GAAG,CAAC,CAAa;;MAErD;MACAP,MAAM,CAACG,OAAO,CAACK,gBAAgB,CAAC,eAAe,EAAEN,mBAAmB,CAAC,CAAC,CAAM;IAChF;;IAEA;IACA,OAAO,MAAM;MAAA,IAAAO,eAAA;MACT,CAAAA,eAAA,GAAAT,MAAM,CAACG,OAAO,cAAAM,eAAA,uBAAdA,eAAA,CAAgBC,mBAAmB,CAAC,eAAe,EAAER,mBAAmB,CAAC;IAC7E,CAAC;EAGP,CAAC,CAAC;EAGJ,oBACIR,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACIjB,OAAA;MAAKkB,GAAG,EAAIZ,MAAO;MAACK,KAAK,EAAI;QAAEQ,UAAU,EAAG,UAAU;QAAEN,OAAO,EAAG,GAAG,CAAC;MAAwE,CAAG;MAAAI,QAAA,EAE3Ib,KAAK,CAACa;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC,gBAER,CAAC;AAGX,CAAC;AAAAlB,EAAA,CA3CGF,SAAgE;AAAAqB,EAAA,GAAhErB,SAAgE;AA8CpE,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}